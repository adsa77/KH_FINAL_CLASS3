-----시퀀스 삭제-----
DROP SEQUENCE SEQ_LEADER_EVAL_NO;
DROP SEQUENCE SEQ_MEMBER_EVAL_NO;
DROP SEQUENCE SEQ_COLLEAGE_EVAL_NO;
DROP SEQUENCE SEQ_KPI_NO;
DROP SEQUENCE SEQ_COMMUTE_NO;
DROP SEQUENCE SEQ_TENDINOUS_NO;
DROP SEQUENCE SEQ_TENDINOUS_REVIEW_NO;
DROP SEQUENCE SEQ_FREE_BOARD_NO;
DROP SEQUENCE SEQ_FREE_BOARD_REVIEW_NO;

-----시퀀스 생성-----
CREATE SEQUENCE SEQ_LEADER_EVAL_NO NOCACHE NOCYCLE;
CREATE SEQUENCE SEQ_MEMBER_EVAL_NO NOCACHE NOCYCLE;
CREATE SEQUENCE SEQ_COLLEAGE_EVAL_NO NOCACHE NOCYCLE;
CREATE SEQUENCE SEQ_KPI_NO NOCACHE NOCYCLE;
CREATE SEQUENCE SEQ_COMMUTE_NO NOCACHE NOCYCLE;
CREATE SEQUENCE SEQ_TENDINOUS_NO NOCACHE NOCYCLE;
CREATE SEQUENCE SEQ_TENDINOUS_REVIEW_NO NOCACHE NOCYCLE;
CREATE SEQUENCE SEQ_FREE_BOARD_NO NOCACHE NOCYCLE;
CREATE SEQUENCE SEQ_FREE_BOARD_REVIEW_NO NOCACHE NOCYCLE;

-----테이블 삭제-----
DROP TABLE LEADER_EVAL CASCADE CONSTRAINTS;
DROP TABLE MEMBER_EVAL CASCADE CONSTRAINTS;
DROP TABLE COLLEAGE_EVAL CASCADE CONSTRAINTS;
DROP TABLE KPI CASCADE CONSTRAINTS;
DROP TABLE COMMUTE CASCADE CONSTRAINTS;
DROP TABLE TENDINOUS CASCADE CONSTRAINTS;
DROP TABLE TENDINOUS_REVIEW CASCADE CONSTRAINTS;
DROP TABLE FREE_BOARD CASCADE CONSTRAINTS;
DROP TABLE FREE_BOARD_REVIEW CASCADE CONSTRAINTS;

-----테이블 생성-----

-- 팀장 평가
CREATE TABLE LEADER_EVAL(
    NO                  NUMBER  PRIMARY KEY
    , EVALUATOR_NO      NUMBER
    , EVALUATEE_NO      NUMBER
    , COMMUNICATION     NUMBER  NOT NULL
    , RESPONSIBILITY    NUMBER  NOT NULL
    , JUDGEMENT         NUMBER  NOT NULL
    , PROFESSIONALISM   NUMBER  NOT NULL
    , START_DATE        TIMESTAMP
    , END_DATE          TIMESTAMP
    , WRITE_DATE        TIMESTAMP    DEFAULT SYSDATE
    , COMPLIMENT        VARCHAR2(1000)
    , DISAPPOINTMENT    VARCHAR2(1000)
    , SUGGESTION        VARCHAR2(1000)
);

-- 팀원 평가
CREATE TABLE MEMBER_EVAL(
    NO                  NUMBER  PRIMARY KEY
    , EVALUATOR_NO      NUMBER
    , EVALUATEE_NO      NUMBER
    , POTENTIAL         NUMBER  NOT NULL
    , COMMUNICATION     NUMBER  NOT NULL
    , PROBLEM_SOLVE     NUMBER  NOT NULL
    , RESPONSIBILITY    NUMBER  NOT NULL
    , START_DATE        TIMESTAMP    
    , END_DATE          TIMESTAMP
    , WRITE_DATE        TIMESTAMP    DEFAULT SYSDATE
    , COMPLIMENT        VARCHAR2(1000)
    , DISAPPOINTMENT    VARCHAR2(1000)
    , SUGGESTION        VARCHAR2(1000)
);

-- 동료 평가
CREATE TABLE COLLEAGE_EVAL(
    NO                  NUMBER  PRIMARY KEY
    , EVALUATOR_NO      NUMBER
    , EVALUATEE_NO      NUMBER
    , POTENTIAL         NUMBER  NOT NULL
    , COMMUNICATION     NUMBER  NOT NULL
    , PROBLEM_SOLVE     NUMBER  NOT NULL
    , RESPONSIBILITY    NUMBER  NOT NULL
    , START_DATE        TIMESTAMP
    , END_DATE          TIMESTAMP
    , WRITE_DATE        TIMESTAMP    DEFAULT SYSDATE
    , COMPLIMENT        VARCHAR2(1000)
    , DISAPPOINTMENT    VARCHAR2(1000)
    , SUGGESTION        VARCHAR2(1000)
);

-- 성과지표
CREATE TABLE KPI(
    NO                  NUMBER  PRIMARY KEY
    , EMP_NO            NUMBER
    , PROJECT_NO        NUMBER
    , GOAL              VARCHAR2(1000)
    , PERSONAL_SCHEDULE VARCHAR2(1000)
    , ENROLL_DATE       TIMESTAMP    DEFAULT SYSDATE
    , MODIFY_DATE       TIMESTAMP   
    , FOCUS             NUMBER
);

-- 출퇴근
CREATE TABLE COMMUTE(
    NO          NUMBER  PRIMARY KEY
    , EMP_NO    NUMBER
    , WORK_TIME TIMESTAMP
    , QUIT_TIME TIMESTAMP
);

-- 건의게시판
CREATE TABLE TENDINOUS(
    NO              NUMBER PRIMARY KEY
    , WRITER_NO     NUMBER
    , TITLE         VARCHAR2(1000)  NOT NULL
    , CONTENT       VARCHAR2(4000)  NOT NULL
    , HIT           NUMBER
    , ENROLL_DATE   TIMESTAMP    DEFAULT SYSDATE
    , MODIFY_DATE   TIMESTAMP
    , DEL_YN        CHAR(1) DEFAULT 'N'
);

-- 건의게시판 댓글
CREATE TABLE TENDINOUS_REVIEW(
    NO              NUMBER PRIMARY KEY
    , NO2           NUMBER
    , WRITER_NO     NUMBER
    , CONTENT       VARCHAR2(4000)
    , WRITE_DATE    TIMESTAMP  DEFAULT SYSDATE
    , MODIFY_DATE   TIMESTAMP
    , DEL_YN        CHAR(1) DEFAULT 'N'
);

-- 자유게시판
CREATE TABLE FREE_BOARD(
    NO              NUMBER       PRIMARY KEY
    , WRITER_NO     NUMBER
    , TITLE         VARCHAR2(1000)  NOT NULL
    , CONTENT       VARCHAR2(4000)  NOT NULL
    , HIT           NUMBER
    , ENROLL_DATE   TIMESTAMP    DEFAULT SYSDATE
    , MODIFY_DATE   TIMESTAMP
    , DEL_YN        CHAR(1)      DEFAULT 'N'
);
-- 자유게시판 댓글
CREATE TABLE FREE_BOARD_REVIEW(
    NO              NUMBER      PRIMARY KEY
    , NO2           NUMBER
    , WRITER_NO     NUMBER
    , CONTENT       VARCHAR2(4000)
    , WRITE_DATE    TIMESTAMP   DEFAULT SYSDATE
    , MODIFY_DATE   TIMESTAMP
    , DEL_YN        CHAR(1)     DEFAULT 'N'
);

--- 외래키 --------
-- LEADER_EVAL
ALTER TABLE LEADER_EVAL ADD CONSTRAINT FK_LEADER_EVAL_TO_EMPLOYEE FOREIGN KEY (EVALUATOR_NO) REFERENCES EMPLOYEE(NO);
ALTER TABLE LEADER_EVAL ADD CONSTRAINT FK_LEADER_EVAL_TO_EMPLOYEE FOREIGN KEY (EVALUATEE_NO) REFERENCES EMPLOYEE(NO);
-- 제약조건
ALTER TABLE LEADER_EVAL ADD CONSTRAINT LEADER_EVAL_CK_COMMUNICATION CHECK (COMMUNICATION >= 0 AND COMMUNICATION <= 100);
ALTER TABLE LEADER_EVAL ADD CONSTRAINT LEADER_EVAL_CK_RESPONSIBILITY CHECK (RESPONSIBILITY >= 0 AND RESPONSIBILITY <= 100);
ALTER TABLE LEADER_EVAL ADD CONSTRAINT LEADER_EVAL_CK_JUDGEMENT CHECK (JUDGEMENT >= 0 AND JUDGEMENT <= 100);
ALTER TABLE LEADER_EVAL ADD CONSTRAINT LEADER_EVAL_CK_PROFESSIONALISM CHECK (PROFESSIONALISM >= 0 AND PROFESSIONALISM <= 100);

--MEMBER_EVAL
ALTER TABLE MEMBER_EVAL ADD CONSTRAINT FK_MEMBER_EVAL_TO_EMPLOYEE FOREIGN KEY (EVALUATOR_NO) REFERENCES EMPLOYEE(NO);
ALTER TABLE MEMBER_EVAL ADD CONSTRAINT FK_MEMBER_EVAL_TO_EMPLOYEE FOREIGN KEY (EVALUATEE_NO) REFERENCES EMPLOYEE(NO);
-- 제약조건
ALTER TABLE MEMBER_EVAL ADD CONSTRAINT MEMBER_EVAL_CK_COMMUNICATION CHECK (COMMUNICATION >= 0 AND COMMUNICATION <= 100);
ALTER TABLE MEMBER_EVAL ADD CONSTRAINT MEMBER_EVAL_CK_POTENTIAL CHECK (POTENTIAL >= 0 AND POTENTIAL <= 100);
ALTER TABLE MEMBER_EVAL ADD CONSTRAINT MEMBER_EVAL_CK_PROBLEM_SOLVE CHECK (PROBLEM_SOLVE >= 0 AND PROBLEM_SOLVE <= 100);
ALTER TABLE MEMBER_EVAL ADD CONSTRAINT MEMBER_EVAL_CK_RESPONSIBILITY CHECK (RESPONSIBILITY >= 0 AND RESPONSIBILITY <= 100);

-- COLLEAGE_EVAL
ALTER TABLE COLLEAGE_EVAL ADD CONSTRAINT FK_COLLEAGE_EVAL_TO_EMPLOYEE FOREIGN KEY (EVALUATOR_NO) REFERENCES EMPLOYEE(NO);
ALTER TABLE COLLEAGE_EVAL ADD CONSTRAINT FK_COLLEAGE_EVAL_TO_EMPLOYEE FOREIGN KEY (EVALUATEE_NO) REFERENCES EMPLOYEE(NO);
-- 제약조건
ALTER TABLE COLLEAGE_EVAL ADD CONSTRAINT COLLEAGE_EVAL_CK_POTENTIAL CHECK (POTENTIAL >= 0 AND POTENTIAL <= 100);
ALTER TABLE COLLEAGE_EVAL ADD CONSTRAINT COLLEAGE_EVAL_CK_COMMUNICATION CHECK (COMMUNICATION >= 0 AND COMMUNICATION <= 100);
ALTER TABLE COLLEAGE_EVAL ADD CONSTRAINT COLLEAGE_EVAL_CK_PROBLEM_SOLVE CHECK (PROBLEM_SOLVE >= 0 AND PROBLEM_SOLVE <= 100);
ALTER TABLE COLLEAGE_EVAL ADD CONSTRAINT COLLEAGE_EVAL_CK_RESPONSIBILITY CHECK (RESPONSIBILITY >= 0 AND RESPONSIBILITY <= 100);

-- KPI
ALTER TABLE KPI ADD CONSTRAINT FK_KPI_TO_EMPLOYEE FOREIGN KEY (EMP_NO) REFERENCES EMPLOYEE(NO);
ALTER TABLE KPI ADD CONSTRAINT FK_KPI_TO_PROJECT FOREIGN KEY (PROJECT_NO) REFERENCES PROJECT(NO);
-- 제약조건
ALTER TABLE KPI ADD CONSTRAINT KPI_CK_FOCUS CHECK (FOCUS >=0 AND FOCUS <=100);

-- COMMUTE
ALTER TABLE COMMUTE ADD CONSTRAINT FK_COMMUTE_TO_EMPLOYEE FOREIGN KEY (EMP_NO) REFERENCES EMPLOYEE(NO);

-- TENDINOUS
ALTER TABLE TENDINOUS ADD CONSTRAINT FK_TENDINOUS_TO_EMPLOYEE FOREIGN KEY (WRITER_NO) REFERENCES EMPLOYEE(NO);

-- FREE_BOARD
ALTER TABLE FREE_BOARD ADD CONSTRAINT FK_FREE_BOARD_TO_EMPLOYEE FOREIGN KEY (WRITER_NO) REFERENCES EMPLOYEE(NO);

-- TENDINOUS_REVIEW
ALTER TABLE TENDINOUS_REVIEW ADD CONSTRAINT FK_TENDINOUS_REVIEW_TO_TENDINOUS FOREIGN KEY (NO2) REFERENCES TENDINOUS(NO);
ALTER TABLE TENDINOUS_REVIEW ADD CONSTRAINT FK_TENDINOUS_REVIEW_TO_EMPLOYEE FOREIGN KEY (WRITER_NO) REFERENCES EMPLOYEE(NO);

-- FREE_BOARD_REVIEW
ALTER TABLE FREE_BOARD_REVIEW ADD CONSTRAINT FK_FREE_BOARD_REVIEW_TO_FREE_BOARD FOREIGN KEY (NO2) REFERENCES FREE_BOARD(NO);
ALTER TABLE FREE_BOARD_REVIEW ADD CONSTRAINT FK_FREE_BOARD_REVIEW_TO_EMPLOYEE FOREIGN KEY (WRITER_NO) REFERENCES EMPLOYEE(NO);



INSERT INTO PROJECT(NO, CODE, EMP_NO, STATE_A_NO, CONTENT, END_DATE) VALUES(SEQ_PROJECT.NEXTVAL, 10, 60, 1, '프로젝트', TIMESTAMP '2024-06-26 18:00:00');
INSERT INTO PROJECT(NO, CODE, EMP_NO, STATE_A_NO, CONTENT, END_DATE) VALUES(SEQ_PROJECT.NEXTVAL, 10, 60, 1, '프로젝트2', TIMESTAMP '2024-06-26 18:00:00');
INSERT INTO PROJECT(NO, CODE, EMP_NO, STATE_A_NO, CONTENT, END_DATE) VALUES(SEQ_PROJECT.NEXTVAL, 10, 60, 1, '프로젝트3', TIMESTAMP '2024-06-26 18:00:00');


SELECT
    P.PROJECT_NO
    , K.FOCUS
    , P.START_DATE
    , P.END_DATE
FROM KPI K
JOIN PROJECT P
ON K.PROJECT_NO = P.NO
WHERE K.EMP_NO = 60;

SELECT
    K.NO
    , K.PROJECT_NO
    , K.GOAL
    , K.PERSONAL_SCHEDULE
    , K.FOCUS
    , P.START_DATE
    , P.END_DATE
    , K.ENROLL_DATE
FROM KPI K
JOIN PROJECT P
ON K.PROJECT_NO = P.NO
WHERE K.NO = 2;