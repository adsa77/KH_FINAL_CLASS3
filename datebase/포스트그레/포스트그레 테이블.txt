-- 시퀀스 삭제
DROP SEQUENCE if exists SEQ_EMPLOYEE;
DROP SEQUENCE if exists SEQ_HR_ACCOUNT;
DROP SEQUENCE if exists SEQ_SIGN;
DROP SEQUENCE if exists SEQ_SIGN_FILE;
DROP SEQUENCE if exists SEQ_SIGN_PATH;
DROP SEQUENCE if exists SEQ_SIGN_REF;
DROP SEQUENCE if exists SEQ_SIGN_COM;
DROP SEQUENCE if exists SEQ_LEAVE;
DROP SEQUENCE if exists SEQ_BUSINESS_TRIP;
DROP SEQUENCE if exists SEQ_LEAVE_TYPE;
DROP SEQUENCE if exists SEQ_LEADER_EVAL;
DROP SEQUENCE if exists SEQ_MEMBER_EVAL;
DROP SEQUENCE if exists SEQ_COLLEAGE_EVAL;
DROP SEQUENCE if exists SEQ_KPI;
DROP SEQUENCE if exists SEQ_COMMUTE;
DROP SEQUENCE if exists SEQ_TENDINOUS;
DROP SEQUENCE if exists SEQ_TENDINOUS_REVIEW;
DROP SEQUENCE if exists SEQ_FREE_BOARD;
DROP SEQUENCE if exists SEQ_FREE_BOARD_REVIEW;
DROP SEQUENCE if exists SEQ_NOTICE_BOARD;
DROP SEQUENCE if exists SEQ_PROJECT;
DROP SEQUENCE if exists SEQ_PROJECT_MANAGER;
DROP SEQUENCE if exists SEQ_CONFERENCE_RECORD;
DROP SEQUENCE if exists SEQ_PROJECT_WORK;
DROP SEQUENCE if exists SEQ_PERSONAL_WORK;
DROP SEQUENCE if exists SEQ_MESSAGE;


-- 시퀀스 생성
CREATE SEQUENCE SEQ_EMPLOYEE CACHE 1 NO CYCLE;
CREATE SEQUENCE SEQ_HR_ACCOUNT CACHE 1 NO CYCLE;
CREATE SEQUENCE SEQ_SIGN CACHE 1 NO CYCLE;
CREATE SEQUENCE SEQ_SIGN_FILE CACHE 1 NO CYCLE;
CREATE SEQUENCE SEQ_SIGN_PATH CACHE 1 NO CYCLE;
CREATE SEQUENCE SEQ_SIGN_REF CACHE 1 NO CYCLE;
CREATE SEQUENCE SEQ_SIGN_COM CACHE 1 NO CYCLE;
CREATE SEQUENCE SEQ_LEAVE CACHE 1 NO CYCLE;
CREATE SEQUENCE SEQ_BUSINESS_TRIP CACHE 1 NO CYCLE;
CREATE SEQUENCE SEQ_LEAVE_TYPE CACHE 1 NO CYCLE;
CREATE SEQUENCE SEQ_LEADER_EVAL CACHE 1 NO CYCLE;
CREATE SEQUENCE SEQ_MEMBER_EVAL CACHE 1 NO CYCLE;
CREATE SEQUENCE SEQ_COLLEAGE_EVAL CACHE 1 NO CYCLE;
CREATE SEQUENCE SEQ_KPI CACHE 1 NO CYCLE;
CREATE SEQUENCE SEQ_COMMUTE CACHE 1 NO CYCLE;
CREATE SEQUENCE SEQ_TENDINOUS CACHE 1 NO CYCLE;
CREATE SEQUENCE SEQ_TENDINOUS_REVIEW CACHE 1 NO CYCLE;
CREATE SEQUENCE SEQ_FREE_BOARD CACHE 1 NO CYCLE;
CREATE SEQUENCE SEQ_FREE_BOARD_REVIEW CACHE 1 NO CYCLE;
CREATE SEQUENCE SEQ_NOTICE_BOARD CACHE 1 NO CYCLE;
CREATE SEQUENCE SEQ_PROJECT CACHE 1 NO CYCLE;
CREATE SEQUENCE SEQ_PROJECT_MANAGER CACHE 1 NO CYCLE;
CREATE SEQUENCE SEQ_CONFERENCE_RECORD CACHE 1 NO CYCLE;
CREATE SEQUENCE SEQ_PROJECT_WORK CACHE 1 NO CYCLE;
CREATE SEQUENCE SEQ_PERSONAL_WORK CACHE 1 NO CYCLE;
CREATE SEQUENCE SEQ_MESSAGE CACHE 1 NO CYCLE;


-- 테이블 삭제
DROP TABLE if exists DEPARTMENT cascade;
DROP TABLE if exists DIVISION cascade;
DROP TABLE if exists AUTHORITY cascade;
DROP TABLE if exists position cascade;
DROP TABLE if exists ATTEND cascade;
DROP TABLE if exists SALARY cascade;
DROP TABLE if exists ANNUAL_LEAVE cascade;
DROP TABLE if exists EMPLOYEE cascade;
DROP TABLE if exists HR_ACCOUNT cascade;
DROP TABLE if exists SIGN cascade;
DROP TABLE if exists SIGN_FILE cascade;
DROP TABLE if exists SIGN_PATH cascade;
DROP TABLE if exists SIGN_REF cascade;
DROP TABLE if exists SIGN_COM cascade;
DROP TABLE if exists LEAVE cascade;
DROP TABLE if exists BUSINESS_TRIP cascade;
DROP TABLE if exists LEAVE_TYPE cascade;
DROP TABLE if exists LEADER_EVAL cascade;
DROP TABLE if exists MEMBER_EVAL cascade;
DROP TABLE if exists COLLEAGE_EVAL cascade;
DROP TABLE if exists KPI cascade;
DROP TABLE if exists COMMUTE cascade;
DROP TABLE if exists TENDINOUS cascade;
DROP TABLE if exists TENDINOUS_REVIEW cascade;
DROP TABLE if exists FREE_BOARD cascade;
DROP TABLE if exists FREE_BOARD_REVIEW cascade;
DROP TABLE if exists NOTICE_BOARD cascade;
DROP TABLE if exists PROJECT cascade;
DROP TABLE if exists PROJECT_MANAGER cascade;
DROP TABLE if exists CONFERENCE_RECORD cascade;
DROP TABLE if exists PROJECT_WORK cascade;
DROP TABLE if exists PERSONAL_WORK cascade;
DROP TABLE if exists WORK_TYPE cascade;
DROP TABLE if exists STATE_A cascade;
DROP TABLE if exists STATE_B cascade;
DROP TABLE if exists MESSAGE cascade;


-- 테이블 생성

-- 부서목록
CREATE TABLE DEPARTMENT (
	CODE              INTEGER        PRIMARY KEY
	, NAME            VARCHAR(100)
	, STATE           VARCHAR(100)
	, ENROLL_DATE     TIMESTAMPTZ
	, MODIFY_DATE     TIMESTAMPTZ
	, END_DATE        TIMESTAMPTZ
);

-- 프로젝트 팀
CREATE TABLE DIVISION (
	CODE              INTEGER        PRIMARY KEY
    , DEPT_CODE       INTEGER
	, NAME            VARCHAR(100)
	, STATE           VARCHAR(100)
	, ENROLL_DATE     TIMESTAMPTZ
	, MODIFY_DATE     TIMESTAMPTZ
	, END_DATE        TIMESTAMPTZ
);

-- 권한등급
CREATE TABLE AUTHORITY (
	RANK              INTEGER        PRIMARY KEY
	, NAME            VARCHAR(100)
);

-- 직급
CREATE TABLE POSITION (
	CODE              INTEGER        PRIMARY KEY
	, NAME            VARCHAR(100)
);

-- 근태
CREATE TABLE ATTEND (
	STATE             INTEGER        PRIMARY KEY
	, NAME            VARCHAR(100)
);

-- 급여
CREATE TABLE SALARY (
	SALARY_CODE       INTEGER    PRIMARY KEY
	, SALARY          INTEGER
);

-- 연차
CREATE TABLE ANNUAL_LEAVE(
    ID	        INTEGER  NOT NULL
	, EMP_NO    INTEGER  NOT NULL
	, COUNT     INTEGER  NOT NULL 		
);

-- 사원정보
CREATE TABLE EMPLOYEE (
	NO                  INTEGER              PRIMARY KEY
	, DEPT_CODE         INTEGER
    , DIV_CODE          INTEGER
	, POSITION_CODE     INTEGER
	, STATE             INTEGER
	, SALARY_CODE       INTEGER
	, RANK              INTEGER
	, SALARY            INTEGER
	, BONUS             INTEGER
	, ID                VARCHAR(100)
	, PWD               VARCHAR(100)
	, NICK              VARCHAR(100)
	, NAME              VARCHAR(100)
	, PHONE             CHAR(11)
	, ADDRESS           VARCHAR(100)
    , PROFILE           VARCHAR(1000)
	, ENROLL_DATE       TIMESTAMPTZ
	, RETIRE_DATE       TIMESTAMPTZ
	, RETIRE_YN         CHAR(1)             DEFAULT 'N'
);

-- 인사관리 계정
CREATE TABLE HR_ACCOUNT(
    NO          INTEGER
    , RANK      INTEGER
    , ID        VARCHAR(100)
    , PWD       VARCHAR(100)
    , NICK      VARCHAR(100)
);

-- 결재
CREATE TABLE SIGN(
    NO              INTEGER          PRIMARY KEY
    , EMP_NO        INTEGER          NOT NULL
    , RESULT        INTEGER          DEFAULT 0   NOT NULL
    , STEP          INTEGER          DEFAULT 1   NOT NULL
    , TITLE         VARCHAR(1000)  NOT NULL
    , CONTENT       VARCHAR(4000)  NOT NULL
    , ENROLL_DATE   TIMESTAMPTZ       DEFAULT CURRENT_TIMESTAMP
);

-- 첨부파일
CREATE TABLE SIGN_FILE(
    NO              INTEGER          PRIMARY KEY
    , SIGN_NO       INTEGER          NOT NULL
    , CHANGE_NAME   VARCHAR(1000)  NOT NULL UNIQUE
    , ORIGIN_NAME   VARCHAR(1000)  NOT NULL
    , "SIZE"        INTEGER          NOT NULL
    , MODIFY_DATE   TIMESTAMPTZ
);

-- 결재선
CREATE TABLE SIGN_PATH(
    NO              INTEGER          PRIMARY KEY
    , SIGN_NO       INTEGER          NOT NULL
    , APPROVER_NO   INTEGER          NOT NULL
    , SIGN_SEQ      INTEGER          NOT NULL
);

-- 참조
CREATE TABLE SIGN_REF(
    NO              INTEGER          PRIMARY KEY
    , SIGN_NO       INTEGER          NOT NULL
    , REF_NO        INTEGER          NOT NULL
);

-- 첨언
CREATE TABLE SIGN_COM(
    NO              INTEGER          PRIMARY KEY
    , SIGN_NO       INTEGER          NOT NULL
    , "COMMENT"     VARCHAR(4000)
);

-- 휴가
CREATE TABLE LEAVE(
    NO              INTEGER          PRIMARY KEY
    , TYPE_NO       INTEGER          NOT NULL
    , EMP_NO        INTEGER          NOT NULL
    , APPROVER_NO   INTEGER          NOT NULL
    , START_DATE    TIMESTAMPTZ       NOT NULL
    , END_DATE      TIMESTAMPTZ       NOT NULL
    , REASON        VARCHAR(4000)  NOT NULL
    , STATE         INTEGER          DEFAULT 0   NOT NULL
    , APPROVE_DATE  TIMESTAMPTZ
    , ENROLL_DATE   TIMESTAMPTZ       DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- 출장
CREATE TABLE BUSINESS_TRIP(
    NO              INTEGER          PRIMARY KEY
    , PRO_NO        INTEGER          NOT NULL
    , EMP_NO        INTEGER          NOT NULL
    , APPROVER_NO   INTEGER          NOT NULL
    , START_DATE    TIMESTAMPTZ       NOT NULL
    , END_DATE      TIMESTAMPTZ       NOT NULL
    , REASON        VARCHAR(4000)  NOT NULL
    , DESTINATION   VARCHAR(1000)  NOT NULL
    , STATE         INTEGER          DEFAULT 0   NOT NULL
    , APPROVE_DATE  TIMESTAMPTZ
    , ENROLL_DATE   TIMESTAMPTZ       DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- 휴가 타입
CREATE TABLE LEAVE_TYPE(
    NO              INTEGER          PRIMARY KEY
    , NAME          VARCHAR(20)    NOT NULL
);

-- 팀장 평가
CREATE TABLE LEADER_EVAL(
    NO                  INTEGER  PRIMARY KEY
    , EVALUATOR_NO      INTEGER
    , EVALUATEE_NO      INTEGER
    , COMMUNICATION     INTEGER  NOT NULL
    , RESPONSIBILITY    INTEGER  NOT NULL
    , JUDGEMENT         INTEGER  NOT NULL
    , PROFESSIONALISM   INTEGER  NOT NULL
    , START_DATE        TIMESTAMPTZ
    , END_DATE          TIMESTAMPTZ
    , WRITE_DATE        TIMESTAMPTZ    DEFAULT CURRENT_TIMESTAMP
    , COMPLIMENT        VARCHAR(1000)
    , DISAPPOINTMENT    VARCHAR(1000)
    , SUGGESTION        VARCHAR(1000)
);

-- 팀원 평가
CREATE TABLE MEMBER_EVAL(
    NO                  INTEGER  PRIMARY KEY
    , EVALUATOR_NO      INTEGER
    , EVALUATEE_NO      INTEGER
    , POTENTIAL         INTEGER  NOT NULL
    , COMMUNICATION     INTEGER  NOT NULL
    , PROBLEM_SOLVE     INTEGER  NOT NULL
    , RESPONSIBILITY    INTEGER  NOT NULL
    , START_DATE        TIMESTAMPTZ    
    , END_DATE          TIMESTAMPTZ
    , WRITE_DATE        TIMESTAMPTZ    DEFAULT CURRENT_TIMESTAMP
    , COMPLIMENT        VARCHAR(1000)
    , DISAPPOINTMENT    VARCHAR(1000)
    , SUGGESTION        VARCHAR(1000)
);

-- 동료 평가
CREATE TABLE COLLEAGE_EVAL(
    NO                  INTEGER  PRIMARY KEY
    , EVALUATOR_NO      INTEGER
    , EVALUATEE_NO      INTEGER
    , POTENTIAL         INTEGER  NOT NULL
    , COMMUNICATION     INTEGER  NOT NULL
    , PROBLEM_SOLVE     INTEGER  NOT NULL
    , RESPONSIBILITY    INTEGER  NOT NULL
    , START_DATE        TIMESTAMPTZ
    , END_DATE          TIMESTAMPTZ
    , WRITE_DATE        TIMESTAMPTZ    DEFAULT CURRENT_TIMESTAMP
    , COMPLIMENT        VARCHAR(1000)
    , DISAPPOINTMENT    VARCHAR(1000)
    , SUGGESTION        VARCHAR(1000)
);

-- 성과지표
CREATE TABLE KPI(
    NO                  INTEGER  PRIMARY KEY
    , EMP_NO            INTEGER
    , PROJECT_NO        INTEGER
    , GOAL              VARCHAR(1000)
    , PERSONAL_SCHEDULE VARCHAR(1000)
    , ENROLL_DATE       TIMESTAMPTZ    DEFAULT CURRENT_TIMESTAMP
    , MODIFY_DATE       TIMESTAMPTZ   
    , FOCUS             INTEGER
);

-- 출퇴근
CREATE TABLE COMMUTE(
    NO          INTEGER  PRIMARY KEY
    , EMP_NO    INTEGER
    , WORK_TIME TIMESTAMPTZ
    , QUIT_TIME TIMESTAMPTZ
);

-- 건의게시판
CREATE TABLE TENDINOUS(
    NO              INTEGER          PRIMARY KEY
    , WRITER_NO     INTEGER
    , TITLE         VARCHAR(1000)  NOT NULL
    , CONTENT       VARCHAR(4000)  NOT NULL
    , HIT           INTEGER          DEFAULT '0'
    , ENROLL_DATE   TIMESTAMPTZ       DEFAULT CURRENT_TIMESTAMP
    , MODIFY_DATE   TIMESTAMPTZ
    , DEL_YN        CHAR(1)         DEFAULT 'N' CHECK (DEL_YN IN ('Y','N'))
);

-- 건의게시판 댓글
CREATE TABLE TENDINOUS_REVIEW(
    NO              INTEGER      PRIMARY KEY
    , NO2           INTEGER
    , WRITER_NO     INTEGER
    , CONTENT       VARCHAR(4000)
    , WRITE_DATE    TIMESTAMPTZ   DEFAULT CURRENT_TIMESTAMP
    , MODIFY_DATE   TIMESTAMPTZ
    , DEL_YN        CHAR(1)     DEFAULT 'N' CHECK (DEL_YN IN ('Y','N'))
);

-- 자유게시판
CREATE TABLE FREE_BOARD(
    NO              INTEGER          PRIMARY KEY
    , WRITER_NO     INTEGER
    , TITLE         VARCHAR(1000)  NOT NULL
    , CONTENT       VARCHAR(4000)  NOT NULL
    , HIT           INTEGER          DEFAULT '0'
    , ENROLL_DATE   TIMESTAMPTZ       DEFAULT CURRENT_TIMESTAMP
    , MODIFY_DATE   TIMESTAMPTZ
    , DEL_YN        CHAR(1)         DEFAULT 'N' CHECK (DEL_YN IN ('Y','N'))
);
-- 자유게시판 댓글
CREATE TABLE FREE_BOARD_REVIEW(
    NO              INTEGER          PRIMARY KEY
    , NO2           INTEGER
    , WRITER_NO     INTEGER
    , CONTENT       VARCHAR(4000)
    , WRITE_DATE    TIMESTAMPTZ       DEFAULT CURRENT_TIMESTAMP
    , MODIFY_DATE   TIMESTAMPTZ
    , DEL_YN        CHAR(1)         DEFAULT 'N' CHECK (DEL_YN IN ('Y','N'))
);

-- 공지게시판
CREATE TABLE NOTICE_BOARD(
    NO              INTEGER          PRIMARY KEY
    , WRITER_NO     INTEGER
    , TITLE         VARCHAR(1000)
    , CONTENT       VARCHAR(4000)
    , HIT           INTEGER          DEFAULT '0'
    , ENROLL_DATE   TIMESTAMPTZ
    , DEL_YN        CHAR(1)         DEFAULT 'N' CHECK (DEL_YN IN ('Y','N'))
);

-- 프로젝트 정보
CREATE TABLE PROJECT(
    NO          INTEGER          PRIMARY KEY,
    CODE        INTEGER          ,
    EMP_NO      INTEGER          ,
    STATE_A_NO  INTEGER          ,
    TITLE       VARCHAR(4000)  ,
    CONTENT     VARCHAR(4000)  NOT NULL,
    START_DATE  TIMESTAMPTZ       DEFAULT CURRENT_TIMESTAMP,
    END_DATE    TIMESTAMPTZ   ,
    MODIFY_DATE TIMESTAMPTZ	DEFAULT NULL
);

-- 프로젝트 담당자
CREATE TABLE PROJECT_MANAGER(
    NO      INTEGER      PRIMARY KEY,
    PRO_NO  INTEGER      ,
    EMP_NO  INTEGER   
);

-- 회의록
CREATE TABLE CONFERENCE_RECORD(
    NO          INTEGER          PRIMARY KEY,
    PRJ_NO      INTEGER          ,
    ENL_DATE    TIMESTAMPTZ       DEFAULT CURRENT_TIMESTAMP,
    DEL_YN      CHAR(1)         DEFAULT 'N' CHECK (DEL_YN IN('Y','N')),
    TITLE       VARCHAR(2000)  NOT NULL,
    CONTENT     VARCHAR(4000)  NOT NULL
);

-- 프로젝트 일정
CREATE TABLE PROJECT_WORK(
    NO              INTEGER          PRIMARY KEY,
    NO2             INTEGER          NOT NULL,
    STATE_B_NO      INTEGER          ,
    TYPE_NO         INTEGER          ,
    START_DATE      TIMESTAMPTZ       DEFAULT CURRENT_TIMESTAMP,
    END_DATE        TIMESTAMPTZ,
    MODIFY_DATE     TIMESTAMPTZ,
    TITLE           VARCHAR(2000)  NOT NULL,
    CONTENT         VARCHAR(4000)  NOT NULL
);

-- 일정 타입
CREATE TABLE WORK_TYPE(
    NO          INTEGER          PRIMARY KEY,
    NAME        VARCHAR(2000)    NOT NULL
);

-- 기타 일정
CREATE TABLE PERSONAL_WORK(
    NO              INTEGER      PRIMARY KEY,
    NO2             INTEGER      NOT NULL,
    STATE_B_NO      INTEGER      ,
    TYPE_NO         INTEGER      ,
    START_DATE      TIMESTAMPTZ   DEFAULT CURRENT_TIMESTAMP,
    END_DATE        TIMESTAMPTZ,
    MODIFY_DATE     TIMESTAMPTZ,
    TITLE       VARCHAR(2000)  NOT NULL,
    CONTENT     VARCHAR(4000)  NOT NULL
);

-- 상태A
CREATE TABLE STATE_A(
    NO          INTEGER          PRIMARY KEY,
    CONTENT     VARCHAR(100)   NOT NULL   
);

-- 상태B
CREATE TABLE STATE_B(
    NO          INTEGER          PRIMARY KEY,
    CONTENT     VARCHAR(100)   NOT NULL
);

-- 메시지
CREATE TABLE MESSAGE(
    NO          INTEGER		    PRIMARY KEY
	, SENDER    INTEGER		    NOT NULL
	, RECEIVER  INTEGER		    NOT NULL
	, TITLE     VARCHAR(100)
	, CONTENT   VARCHAR(1000)
	, SEND_TIME TIMESTAMPTZ       DEFAULT CURRENT_TIMESTAMP
	, READ_YN	CHAR(1)         DEFAULT 'N'     NOT NULL
	, DEL_YN	CHAR(1)	        DEFAULT 'N'     NOT NULL
);


-- 외래키 추가

-- 프로젝트 팀
ALTER TABLE DIVISION 
ADD CONSTRAINT FK_DEPARTMENT_TO_DIVISION 
FOREIGN KEY (DEPT_CODE)
REFERENCES DEPARTMENT (CODE);

-- 사원정보
ALTER TABLE EMPLOYEE 
ADD CONSTRAINT FK_DEPARTMENT_TO_EMPLOYEE 
FOREIGN KEY (DEPT_CODE)
REFERENCES DEPARTMENT (CODE);

ALTER TABLE EMPLOYEE 
ADD CONSTRAINT FK_POSITION_TO_EMPLOYEE 
FOREIGN KEY (POSITION_CODE)
REFERENCES POSITION (CODE);

ALTER TABLE EMPLOYEE 
ADD CONSTRAINT FK_ATTEND_TO_EMPLOYEE 
FOREIGN KEY (STATE)
REFERENCES ATTEND (STATE);

ALTER TABLE EMPLOYEE 
ADD CONSTRAINT FK_EMPLOYEE_SALARY 
FOREIGN KEY (SALARY_CODE)
REFERENCES SALARY (SALARY_CODE);

ALTER TABLE EMPLOYEE 
ADD CONSTRAINT FK_AUTHORITY_TO_EMPLOYEE 
FOREIGN KEY (RANK)
REFERENCES AUTHORITY (RANK);

-- 인사관리계정
ALTER TABLE HR_ACCOUNT 
ADD CONSTRAINT FK_AUTHORITY_TO_HR_ACCOUNT 
FOREIGN KEY (RANK)
REFERENCES AUTHORITY (RANK);

-- 연차
ALTER TABLE ANNUAL_LEAVE
ADD CONSTRAINT FK_ANNUAL_LEAVE_TO_EMPLOYEE
FOREIGN KEY(EMP_NO)
REFERENCES EMPLOYEE (NO);

-- 휴가
ALTER TABLE LEAVE
ADD CONSTRAINT FK_LEAVE_LEAVE_TYPE
FOREIGN KEY (TYPE_NO)
REFERENCES LEAVE_TYPE(NO);

-- 출장
ALTER TABLE BUSINESS_TRIP
ADD CONSTRAINT FK_BUSINESS_TRIP_PROJECT
FOREIGN KEY (PRO_NO)
REFERENCES PROJECT(NO);

-- 결재
ALTER TABLE SIGN
ADD CONSTRAINT FK_SIGN_EMPLOYEE
FOREIGN KEY (EMP_NO)
REFERENCES EMPLOYEE(NO);

-- 첨부파일
ALTER TABLE SIGN_FILE
ADD CONSTRAINT FK_SIGN_FILE_SIGN
FOREIGN KEY (SIGN_NO)
REFERENCES SIGN(NO);

-- 결재선
ALTER TABLE SIGN_PATH
ADD CONSTRAINT FK_SIGN_PATH_SIGN
FOREIGN KEY (SIGN_NO)
REFERENCES SIGN(NO);

ALTER TABLE SIGN_PATH
ADD CONSTRAINT FK_SIGN_PATH_EMPLOYEE
FOREIGN KEY (APPROVER_NO)
REFERENCES EMPLOYEE(NO);

-- 참조
ALTER TABLE SIGN_REF
ADD CONSTRAINT FK_SIGN_REF_SIGN
FOREIGN KEY (SIGN_NO)
REFERENCES SIGN(NO);

ALTER TABLE SIGN_REF
ADD CONSTRAINT FK_SIGN_REF_EMPLOYEE
FOREIGN KEY (REF_NO)
REFERENCES EMPLOYEE(NO);

-- 첨언
ALTER TABLE SIGN_COM
ADD CONSTRAINT FK_SIGN_COM_SIGN
FOREIGN KEY (SIGN_NO)
REFERENCES SIGN(NO);

-- 팀장 평가
ALTER TABLE LEADER_EVAL 
ADD CONSTRAINT FK_LEADER_EVAL_TO_EMPLOYEE 
FOREIGN KEY (EVALUATOR_NO) 
REFERENCES EMPLOYEE(NO);

ALTER TABLE LEADER_EVAL 
ADD CONSTRAINT FK_LEADER_EVAL_TO_EMPLOYEE2 
FOREIGN KEY (EVALUATEE_NO) 
REFERENCES EMPLOYEE(NO);
-- 제약조건
ALTER TABLE LEADER_EVAL 
ADD CONSTRAINT LEADER_EVAL_CK_COMMUNICATION 
CHECK (COMMUNICATION >= 0 AND COMMUNICATION <= 100);

ALTER TABLE LEADER_EVAL 
ADD CONSTRAINT LEADER_EVAL_CK_RESPONSIBILITY 
CHECK (RESPONSIBILITY >= 0 AND RESPONSIBILITY <= 100);

ALTER TABLE LEADER_EVAL 
ADD CONSTRAINT LEADER_EVAL_CK_JUDGEMENT 
CHECK (JUDGEMENT >= 0 AND JUDGEMENT <= 100);

ALTER TABLE LEADER_EVAL 
ADD CONSTRAINT LEADER_EVAL_CK_PROFESSIONALISM 
CHECK (PROFESSIONALISM >= 0 AND PROFESSIONALISM <= 100);

-- 팀원 평가
ALTER TABLE MEMBER_EVAL 
ADD CONSTRAINT FK_MEMBER_EVAL_TO_EMPLOYEE 
FOREIGN KEY (EVALUATOR_NO) 
REFERENCES EMPLOYEE(NO);

ALTER TABLE MEMBER_EVAL 
ADD CONSTRAINT FK_MEMBER_EVAL_TO_EMPLOYEE2 
FOREIGN KEY (EVALUATEE_NO)
REFERENCES EMPLOYEE(NO);
-- 제약조건
ALTER TABLE MEMBER_EVAL 
ADD CONSTRAINT MEMBER_EVAL_CK_COMMUNICATION 
CHECK (COMMUNICATION >= 0 AND COMMUNICATION <= 100);

ALTER TABLE MEMBER_EVAL 
ADD CONSTRAINT MEMBER_EVAL_CK_POTENTIAL 
CHECK (POTENTIAL >= 0 AND POTENTIAL <= 100);

ALTER TABLE 
MEMBER_EVAL ADD CONSTRAINT MEMBER_EVAL_CK_PROBLEM_SOLVE 
CHECK (PROBLEM_SOLVE >= 0 AND PROBLEM_SOLVE <= 100);

ALTER TABLE MEMBER_EVAL 
ADD CONSTRAINT MEMBER_EVAL_CK_RESPONSIBILITY 
CHECK (RESPONSIBILITY >= 0 AND RESPONSIBILITY <= 100);

-- 동료 평가
ALTER TABLE COLLEAGE_EVAL 
ADD CONSTRAINT FK_COLLEAGE_EVAL_TO_EMPLOYEE 
FOREIGN KEY (EVALUATOR_NO) 
REFERENCES EMPLOYEE(NO);

ALTER TABLE COLLEAGE_EVAL 
ADD CONSTRAINT FK_COLLEAGE_EVAL_TO_EMPLOYEE2 
FOREIGN KEY (EVALUATEE_NO) 
REFERENCES EMPLOYEE(NO);

-- 제약조건
ALTER TABLE COLLEAGE_EVAL 
ADD CONSTRAINT COLLEAGE_EVAL_CK_POTENTIAL 
CHECK (POTENTIAL >= 0 AND POTENTIAL <= 100);

ALTER TABLE COLLEAGE_EVAL 
ADD CONSTRAINT COLLEAGE_EVAL_CK_COMMUNICATION 
CHECK (COMMUNICATION >= 0 AND COMMUNICATION <= 100);

ALTER TABLE COLLEAGE_EVAL 
ADD CONSTRAINT COLLEAGE_EVAL_CK_PROBLEM_SOLVE
CHECK (PROBLEM_SOLVE >= 0 AND PROBLEM_SOLVE <= 100);

ALTER TABLE COLLEAGE_EVAL 
ADD CONSTRAINT COL_EVAL_CK_RESP
CHECK (RESPONSIBILITY >= 0 AND RESPONSIBILITY <= 100);

-- 성과지표
ALTER TABLE KPI 
ADD CONSTRAINT FK_KPI_TO_EMPLOYEE 
FOREIGN KEY (EMP_NO) REFERENCES EMPLOYEE(NO);

ALTER TABLE KPI 
ADD CONSTRAINT FK_KPI_TO_PROJECT 
FOREIGN KEY (PROJECT_NO) REFERENCES PROJECT(NO);
-- 제약조건
ALTER TABLE KPI 
ADD CONSTRAINT KPI_CK_FOCUS 
CHECK (FOCUS >=0 AND FOCUS <=100);

-- 출퇴근
ALTER TABLE COMMUTE 
ADD CONSTRAINT FK_COMMUTE_TO_EMPLOYEE 
FOREIGN KEY (EMP_NO) 
REFERENCES EMPLOYEE(NO);

-- 건의게시판
ALTER TABLE TENDINOUS
ADD CONSTRAINT FK_TENDINOUS_TO_EMPLOYEE 
FOREIGN KEY (WRITER_NO) 
REFERENCES EMPLOYEE(NO);

-- 자유게시판
ALTER TABLE FREE_BOARD 
ADD CONSTRAINT FK_FREE_BOARD_TO_EMPLOYEE
FOREIGN KEY (WRITER_NO) 
REFERENCES EMPLOYEE(NO);

-- 건의게시판 댓글
ALTER TABLE TENDINOUS_REVIEW 
ADD CONSTRAINT FK_REVIEW_TO_TENDINOUS 
FOREIGN KEY (NO2) 
REFERENCES TENDINOUS(NO);

ALTER TABLE TENDINOUS_REVIEW
ADD CONSTRAINT FK_REVIEW_TO_EMP01
FOREIGN KEY (WRITER_NO) 
REFERENCES EMPLOYEE(NO);

-- 자유게시판 댓글
ALTER TABLE FREE_BOARD_REVIEW 
ADD CONSTRAINT FK_REVIEW_TO_FREE_BOARD 
FOREIGN KEY (NO2) 
REFERENCES FREE_BOARD(NO);

ALTER TABLE FREE_BOARD_REVIEW 
ADD CONSTRAINT FK_REVIEW_TO_EMP02
FOREIGN KEY (WRITER_NO) 
REFERENCES EMPLOYEE(NO);

-- 공지게시판
ALTER TABLE NOTICE_BOARD
ADD CONSTRAINT FK_NOTICE_BOARD_TO_EMPLOYEE
FOREIGN KEY (WRITER_NO) 
REFERENCES EMPLOYEE(NO);

--PROJECT(프로젝트 정보)
ALTER TABLE PROJECT
ADD CONSTRAINT PROJECT_CODE_FK
FOREIGN KEY(CODE) REFERENCES DEPARTMENT(CODE);

ALTER TABLE PROJECT 
ADD CONSTRAINT PROJECT_EMP_NO_FK
FOREIGN KEY(EMP_NO) REFERENCES EMPLOYEE(NO);

ALTER TABLE PROJECT
ADD CONSTRAINT PROJECT_STATE_A_NO_FK
FOREIGN KEY(STATE_A_NO) REFERENCES STATE_A(NO);

--PROJECT-MANAGER(프로젝트담당자)
ALTER TABLE PROJECT_MANAGER 
ADD CONSTRAINT PROJECT_MANAGER_PRO_NO_FK
FOREIGN KEY(PRO_NO) REFERENCES PROJECT(NO);

ALTER TABLE PROJECT_MANAGER 
ADD CONSTRAINT PROJECT_MANAGER_EMP_NO_FK
FOREIGN KEY(EMP_NO) REFERENCES EMPLOYEE(NO);

--CONFERENCE_RECORD(회의기록)
ALTER TABLE CONFERENCE_RECORD
ADD CONSTRAINT CONFERENCE_RECORD_PRJ_NO_FK
FOREIGN KEY(PRJ_NO) REFERENCES PROJECT(NO);

--PROJECT_WORK(프로젝트일정)
ALTER TABLE PROJECT_WORK
ADD CONSTRAINT PROJECT_WORK_NO2_FK
FOREIGN KEY(NO2) REFERENCES PROJECT(NO);

ALTER TABLE PROJECT_WORK
ADD CONSTRAINT PROJECT_WORK_STATE_B_NO_FK
FOREIGN KEY(STATE_B_NO) REFERENCES STATE_B(NO);

ALTER TABLE PROJECT_WORK
ADD CONSTRAINT PROJECT_WORK_TYPE_NO_FK
FOREIGN KEY(TYPE_NO) REFERENCES WORK_TYPE(NO);

--PERSONAL_WORK(기타일정)
ALTER TABLE PERSONAL_WORK
ADD CONSTRAINT PERSONAL_WORK_NO2_FK
FOREIGN KEY(NO2) REFERENCES EMPLOYEE(NO);

ALTER TABLE PERSONAL_WORK
ADD CONSTRAINT PERSONAL_WORK_STATE_B_NO_FK
FOREIGN KEY(STATE_B_NO) REFERENCES STATE_B(NO);

ALTER TABLE PERSONAL_WORK
ADD CONSTRAINT PERSONAL_WORK_TYPE_NO_FK
FOREIGN KEY(TYPE_NO) REFERENCES WORK_TYPE(NO);

--메시지
ALTER TABLE MESSAGE
ADD CONSTRAINT FK_MESSAGE_SENDER
FOREIGN KEY (SENDER)
REFERENCES EMPLOYEE(NO);

ALTER TABLE MESSAGE
ADD CONSTRAINT FK_MESSAGE_RECEIVER
FOREIGN KEY (RECEIVER)
REFERENCES EMPLOYEE(NO);

COMMIT;
